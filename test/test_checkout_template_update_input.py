# coding: utf-8

"""
    Rvvup API

    Rvvup Public API

    The version of the OpenAPI document: 2024-03-01
    Contact: info@rvvup.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.checkout_template_update_input import CheckoutTemplateUpdateInput

class TestCheckoutTemplateUpdateInput(unittest.TestCase):
    """CheckoutTemplateUpdateInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckoutTemplateUpdateInput:
        """Test CheckoutTemplateUpdateInput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckoutTemplateUpdateInput`
        """
        model = CheckoutTemplateUpdateInput()
        if include_optional:
            return CheckoutTemplateUpdateInput(
                amount_type = 'FIXED',
                customer_fields = openapi_client.models.checkout_customer_fields_update_input.CheckoutCustomerFieldsUpdateInput(
                    optional = [
                        'GIVEN_NAME'
                        ], 
                    required = [
                        'GIVEN_NAME'
                        ], ),
                enabled_payment_methods = CARD,
                name = '0',
                notify_customer = True,
                notify_merchant = True,
                payment_method_settings = openapi_client.models.checkout_payment_method_settings_update_input.CheckoutPaymentMethodSettingsUpdateInput(
                    apple_pay = openapi_client.models.checkout_apple_pay_settings_update_input.CheckoutApplePaySettingsUpdateInput(
                        capture_type = 'AUTOMATIC_CHECKOUT', 
                        customer_fields = openapi_client.models.checkout_customer_fields_update_input.CheckoutCustomerFieldsUpdateInput(
                            optional = [
                                'GIVEN_NAME'
                                ], 
                            required = [
                                'GIVEN_NAME'
                                ], ), ), 
                    card = openapi_client.models.checkout_card_settings_update_input.CheckoutCardSettingsUpdateInput(), 
                    pay_by_bank = openapi_client.models.checkout_pay_by_bank_settings_update_input.CheckoutPayByBankSettingsUpdateInput(), )
            )
        else:
            return CheckoutTemplateUpdateInput(
        )
        """

    def testCheckoutTemplateUpdateInput(self):
        """Test CheckoutTemplateUpdateInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
