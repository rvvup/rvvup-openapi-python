# coding: utf-8

"""
    Rvvup API

    Rvvup Public API

    The version of the OpenAPI document: 2024-03-01
    Contact: info@rvvup.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.payment_session import PaymentSession

class TestPaymentSession(unittest.TestCase):
    """PaymentSession unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentSession:
        """Test PaymentSession
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentSession`
        """
        model = PaymentSession()
        if include_optional:
            return PaymentSession(
                billing_address = openapi_client.models.address.Address(
                    city = '', 
                    company = '', 
                    country_code = '', 
                    line1 = '', 
                    line2 = '', 
                    name = '', 
                    phone_number = '', 
                    postcode = '', 
                    state = '', ),
                checkout_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                customer = openapi_client.models.customer.Customer(
                    email = '', 
                    given_name = '', 
                    phone_number = '', 
                    surname = '', ),
                dashboard_url = '',
                discount_total = openapi_client.models.money.Money(
                    amount = '', 
                    currency = '', ),
                external_reference = '',
                id = '',
                items = [
                    openapi_client.models.item.Item(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        name = '', 
                        price = openapi_client.models.money.Money(
                            amount = '', 
                            currency = '', ), 
                        price_with_tax = openapi_client.models.money.Money(
                            amount = '', 
                            currency = '', ), 
                        quantity = '', 
                        restriction = 'ALLOWED', 
                        sku = '', 
                        tax = , 
                        total = , )
                    ],
                merchant_id = '',
                payment_link_id = '',
                payments = [
                    openapi_client.models.payment.Payment(
                        amount = openapi_client.models.money.Money(
                            amount = '', 
                            currency = '', ), 
                        authorization_expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        capture_type = 'AUTOMATIC_CHECKOUT', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        decline_reason = 'INSUFFICIENT_FUNDS', 
                        id = '', 
                        method = 'FAKE_PAYMENT_METHOD', 
                        payment_session_id = '', 
                        settlement_status = 'NOT_INITIATED', 
                        status = 'CREATED', 
                        summary = openapi_client.models.payment_summary.PaymentSummary(
                            is_manually_capturable = True, 
                            is_refundable = True, 
                            is_voidable = True, 
                            payment_actions = [
                                openapi_client.models.payment_action.PaymentAction(
                                    method = 'REDIRECT_URL', 
                                    type = 'AUTHORIZATION', 
                                    value = '', )
                                ], 
                            refundable_amount = openapi_client.models.money.Money(
                                amount = '', 
                                currency = '', ), ), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        void_reason = 'CUSTOMER_REQUEST', )
                    ],
                requires_shipping = True,
                shipping_address = openapi_client.models.address.Address(
                    city = '', 
                    company = '', 
                    country_code = '', 
                    line1 = '', 
                    line2 = '', 
                    name = '', 
                    phone_number = '', 
                    postcode = '', 
                    state = '', ),
                shipping_total = openapi_client.models.money.Money(
                    amount = '', 
                    currency = '', ),
                status = 'CANCELLED',
                tax_total = openapi_client.models.money.Money(
                    amount = '', 
                    currency = '', ),
                total = openapi_client.models.money.Money(
                    amount = '', 
                    currency = '', ),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return PaymentSession(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dashboard_url = '',
                id = '',
                items = [
                    openapi_client.models.item.Item(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        name = '', 
                        price = openapi_client.models.money.Money(
                            amount = '', 
                            currency = '', ), 
                        price_with_tax = openapi_client.models.money.Money(
                            amount = '', 
                            currency = '', ), 
                        quantity = '', 
                        restriction = 'ALLOWED', 
                        sku = '', 
                        tax = , 
                        total = , )
                    ],
                merchant_id = '',
                payments = [
                    openapi_client.models.payment.Payment(
                        amount = openapi_client.models.money.Money(
                            amount = '', 
                            currency = '', ), 
                        authorization_expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        capture_type = 'AUTOMATIC_CHECKOUT', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        decline_reason = 'INSUFFICIENT_FUNDS', 
                        id = '', 
                        method = 'FAKE_PAYMENT_METHOD', 
                        payment_session_id = '', 
                        settlement_status = 'NOT_INITIATED', 
                        status = 'CREATED', 
                        summary = openapi_client.models.payment_summary.PaymentSummary(
                            is_manually_capturable = True, 
                            is_refundable = True, 
                            is_voidable = True, 
                            payment_actions = [
                                openapi_client.models.payment_action.PaymentAction(
                                    method = 'REDIRECT_URL', 
                                    type = 'AUTHORIZATION', 
                                    value = '', )
                                ], 
                            refundable_amount = openapi_client.models.money.Money(
                                amount = '', 
                                currency = '', ), ), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        void_reason = 'CUSTOMER_REQUEST', )
                    ],
                status = 'CANCELLED',
                total = openapi_client.models.money.Money(
                    amount = '', 
                    currency = '', ),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testPaymentSession(self):
        """Test PaymentSession"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
